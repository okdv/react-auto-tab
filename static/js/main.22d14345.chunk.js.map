{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["AutoTabProvider","props","tabGroup","tabRef","React","focusOn","i","addProps","el","settings","placement","tabOnChange","tabOnMax","tabOnKeys","backTabOnKeys","pasteToFit","maxLength","ref","onPaste","e","pasteVal","window","clipboardData","tabMax","onKeyDown","key","onChange","processElements","elements","processed","Array","length","className","id","style","undefined","clone","Feature","title","type","tagColor","val","valColor","desc","required","mr","mx","colorScheme","textColor","App","my","textAlign","size","fontSize","m","width","placeholder","tabbable","onFocus","console","log","backgroundColor","defaultValue","name","columns","Date","getFullYear","ReactDOM","render","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d14345.chunk.js","sourcesContent":["import React from 'react'\n\nexport const AutoTabProvider = (props) => {\n  let tabGroup = [] \n\n  const tabRef = React.useRef([])\n  \n  const focusOn = (i) => tabRef.current[i] ? tabRef.current[i].focus() : \"\"\n\n  const addProps = (el) => {\n    const settings = {\n      placement: tabGroup.length, \n      tabOnChange:false,\n      tabOnMax:true,\n      tabOnKeys:[\"enter\"],\n      backTabOnKeys:[\"backspace\"],      \n      pasteToFit: true,\n      maxLength: el.props.maxLength || undefined,\n      ...props.settings,\n      ...el.props.settings\n    }\n    return {\n      ref: (ref) => (tabRef.current[settings.placement] = ref),\n      onPaste: (e) => {\n        typeof el.props.onPaste === 'function' ? el.props.onPaste(e) : \"\"\n        if (settings.pasteToFit === true) {\n          let clipboardData = e.clipboardData || window.clipboardData, pasteVal = clipboardData.getData('Text'), i = settings.placement\n          e.preventDefault()\n          while (tabRef.current[i] && pasteVal.length > 0) {\n            let tabMax = tabGroup[i].props.maxLength || pasteVal.toString().length\n            tabRef.current[i].value = pasteVal.slice(0,tabMax)\n            pasteVal = pasteVal.slice(tabMax)\n            focusOn(i)\n            i++\n          }\n        }\n      },\n      onKeyDown: (e) => {\n        typeof el.props.onKeyDown === 'function' ? el.props.onKeyDown(e) : \"\"\n        settings.tabOnKeys.forEach(key => key === e.key.toLowerCase() ? (focusOn(settings.placement+1),e.preventDefault()) : \"\")\n        settings.backTabOnKeys.forEach(key => key === e.key.toLowerCase() ? \n          (e.target.value.length === 0 ? \n            (focusOn(settings.placement-1),e.preventDefault()) : \"\") : \"\")\n      },\n      onChange: (e) => {\n        typeof el.props.onChange === 'function' ? el.props.onChange(e) : \"\"\n        settings.tabOnMax === true && (settings.maxLength === e.target.value.length) ? focusOn(settings.placement+1) : \"\"\n        settings.tabOnChange === true ? focusOn(settings.placement+1) : \"\"\n      }\n    }\n  }\n\n  const processElements = (elements) => {\n    let processed = []\n    elements = Array.isArray(elements) ? elements : [elements]\n    elements.forEach((el) => {\n      if (el.tabbable || (el.props && el.props.tabbable)) {\n        processed.push(React.cloneElement(el,{key:processed.length, ...addProps(el)},el.props.children))\n        tabGroup.push(el)\n      } else if (el.props && el.props.children && (Array.isArray(el.props.children) || typeof el.props.children === 'object')) {\n        processed.push(React.cloneElement(el,{key:processed.length},processElements(el.props.children)))\n      } else processed.push(React.cloneElement(el,{key:processed.length}, el.props ? (el.props.children || \"\") : \"\"))\n    })\n    return processed\n  }\n  \n  return (\n    <div className={props.className || undefined} id={props.id || undefined} style={props.style || undefined}>\n      {processElements(props.children).map(clone => clone)}\n    </div>\n  )\n}\n","import React from 'react'\nimport { AutoTabProvider } from 'react-auto-tab'\nimport {\n  Container,\n  Heading,\n  Text,\n  Code,\n  Tag,\n  Badge,\n  SimpleGrid,\n} from '@chakra-ui/react'\n\nconst Feature = ({title,type,tagColor,val,valColor,desc,required}) => (\n  <Text>\n    <Code mr=\"5px\">{title}</Code>\n    <Tag mx=\"5px\" colorScheme={tagColor}>{type}</Tag>\n    <Code mr=\"5px\" textColor={valColor}>{val}</Code>\n    {required ? <Badge colorScheme=\"red\">required</Badge> : \"\"}\n    <span>:&nbsp;{desc}</span>\n  </Text>\n)\n\nconst App = () => {\n  return (\n    <Container>\n      <Container my=\"3\" textAlign='center'>\n        <Heading size=\"2xl\">react-auto-tab</Heading>\n        <Text fontSize=\"xl\">Simple auto tabbing provider for React.js</Text>\n      </Container>\n      <br />\n      <Container>\n        <Feature title=\"tabOnMax\" type=\"boolean\" tagColor=\"teal\" val=\"true\" valColor=\"blue\" desc=\"tabs to next input when maxLength is met, maxLength must be greater than zero to work on any element\" />\n        <AutoTabProvider className=\"tab-group big-input-group\">\n          <Text m=\"1\">+</Text>\n          <input  style={{width:\".8em\"}} placeholder='1' type=\"text\" maxLength={1} tabbable=\"true\" />\n          <Text tabbable=\"true\" onFocus={() => console.log(\"test\")} m=\"1\">+</Text>\n          <input style={{width:\"2em\"}} placeholder='888' type=\"text\" maxLength={3} tabbable=\"true\" />\n          <Text m=\"1\">)&nbsp;</Text>\n          <input style={{width:\"2em\"}} placeholder='867' type=\"text\" maxLength={3} tabbable=\"true\" />\n          <Text m=\"1\">-</Text>\n          <input style={{width:\"2.5em\"}} placeholder='5309' type=\"text\" maxLength={4} tabbable=\"true\" />\n        </AutoTabProvider>\n      </Container>\n      <br />\n      <Container>\n        <Feature title=\"tabOnKeys\" type=\"array\" tagColor=\"blue\" valColor=\"black\" val=\"['enter']\" desc=\"tabs to next input when a key in the array is pressed, while the input is focused\" />\n        <AutoTabProvider className=\"tab-group hidden-input-group\" style={{backgroundColor:\"#fff\"}}>\n          <Text m=\"1\">First:</Text>\n          <input style={{width:\"5em\"}} type=\"text\" tabbable=\"true\" />\n          <Text m=\"1\">Middle Initial:</Text>\n          <input style={{width:\".8em\"}} type=\"text\" maxLength={1} tabbable=\"true\" />\n          <Text m=\"1\">Last:</Text>\n          <input style={{width:\"7em\"}} type=\"text\" tabbable=\"true\" />\n        </AutoTabProvider>\n      </Container>\n      <br />\n      <Container>\n        <Feature title=\"backTabOnKeys\" type=\"array\" tagColor=\"blue\" val=\"['backspace']\" valColor=\"black\" desc=\"'backtabs' when a key in the array is pressed, while the input is focused and has no value \" />\n        <AutoTabProvider className=\"tab-group hidden-input-group\" style={{backgroundColor:\"#fff\"}}>\n          <Text m=\"1\">Street:</Text>\n          <input style={{width:\"7em\"}} type=\"text\" defaultValue=\"123 Main St\" tabbable=\"true\" />\n          <Text m=\"1\">Unit:</Text>\n          <input style={{width:\".8em\"}} type=\"text\" maxLength={1} tabbable=\"true\" />\n          <Text m=\"1\">City:</Text>\n          <input style={{width:\"7em\"}} type=\"text\" defaultValue=\"Ne\" tabbable=\"true\" />\n          <Text m=\"1\">State:</Text>\n          <input style={{width:\"7em\"}} type=\"text\" tabbable=\"true\" />\n        </AutoTabProvider>\n      </Container>\n      <br />\n      <Container>\n        <Feature title=\"placement\" type=\"integer\" tagColor=\"yellow\" desc=\"index position in tab order, order of rendering by default\" />\n        <AutoTabProvider className=\"tab-group big-input-group placement-example\">\n          <input placeholder='First' type=\"text\" settings={{placement:1}} maxLength={5} tabbable=\"true\" />\n          <input placeholder='Third' type=\"text\" settings={{placement:3}} maxLength={5} tabbable=\"true\" />\n          <input placeholder='Second' type=\"text\" settings={{placement:2}} maxLength={5} tabbable=\"true\" />\n        </AutoTabProvider>\n      </Container>\n      <br />\n      <Container>\n        <Feature title=\"tabOnChange\" type=\"boolean\" tagColor=\"teal\" val=\"false\" valColor=\"blue\" desc=\"tabs onChange of focused element\" />\n        <AutoTabProvider className=\"tab-group big-input-group group-spacing\">\n          <input style={{width:\"7em\"}} placeholder='Look' type=\"text\" maxLength={5} tabbable=\"true\" />\n          <select settings={{tabOnChange:true}} tabbable=\"true\">\n            <option>Select one</option>\n            <option>Hello</option>\n            <option>There</option>\n          </select>\n          <input style={{width:\"7em\"}} placeholder='How' type=\"text\" maxLength={5} tabbable=\"true\" />\n          <input settings={{tabOnChange:true}} type=\"checkbox\" id=\"check-1\" tabbable=\"true\" />\n          <input style={{width:\"7em\"}} placeholder='Versatile' type=\"text\" maxLength={5} tabbable=\"true\" />\n          <input settings={{tabOnChange:true}} type=\"radio\" name=\"radio-group\" tabbable=\"true\" />\n          <input style={{width:\"3em\"}} placeholder='How' type=\"text\" maxLength={5} tabbable=\"true\" />\n        </AutoTabProvider>\n      </Container>\n      <br />\n      <Container>\n        <Feature title=\"pasteToFit\" type=\"boolean\" tagColor=\"teal\" val=\"true\" valColor=\"blue\" desc=\"pasted values will extend into the next tabbable elements, using maxLength as its method of limitation\" />\n        <AutoTabProvider className=\"tab-group big-input-group paste-example\">\n          <input type=\"text\" maxLength={1} tabbable=\"true\" />\n          <input type=\"text\" maxLength={1} tabbable=\"true\" />\n          <input type=\"text\" maxLength={1} tabbable=\"true\" />\n          <Text m=\"1\">-</Text>\n          <input type=\"text\" maxLength={1} tabbable=\"true\" />\n          <input type=\"text\" maxLength={1} tabbable=\"true\" />\n          <input type=\"text\" maxLength={1} tabbable=\"true\" />        \n        </AutoTabProvider>\n        <Text fontSize=\"sm\">Try pasting \"123456\"</Text>\n      </Container>\n      <br />\n      <SimpleGrid textAlign=\"center\" columns={2}>\n        <Text>Made with&nbsp;&#9829;&nbsp;&amp;&nbsp;&#9834;</Text>\n        <Text>{new Date().getFullYear() || \"2021\"}&nbsp;&copy;&nbsp;Otho DuBoise</Text>\n      </SimpleGrid>\n    </Container>\n  )\n} \n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react'\nimport App from './App'\n\nReactDOM.render(\n    <ChakraProvider>\n        <ColorModeScript initialColorMode='dark' />\n        <App />\n    </ChakraProvider>, \n    document.getElementById('root')\n)\n"],"sourceRoot":""}